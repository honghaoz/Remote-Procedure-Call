Instructions for program

Commands:
 	$ make 
		this command generates rpc_binder.o rpc_server.o rpc_client.o rpc_helper.o pmap.o files and executable file binder

	$ make clean
		remove all executable files and linkable files e.g. binder rpc_server.o

	$ ./binder
		run binder program before run server and client. 
		server will print out its server address and next available port
		
	$ export BINDER_ADDRESS=“hostname”
	$ export BINDER_PORT=“#port#”
		to set the env variable, and client will get them from client side

	$ g++ -c client.cc server.cc
		generate a client.o server. files
	$ g++ -L. client.o -lrpc client
		generate an executable file client by using rpc library
	$ g++ -L. server.o server_functions.o server_function_skels.o -lrpc server -lpthread
		generate an executable file server by using roc library
		please add lpthread flag since our server uses multi-threading to handle
		client requests
	$ ./server
		run server to register itself on binder
	$./client
		run client to execute remote procedure call 

Instruction to run program:
	- place code files in same directory than makefile.
	- execute make in order to compile the c++ files
        - then run the binder to show the ip and port number of binder
	- run the server next to show the ip host and port number of server
	- run client after all binder and servers started

        ************* notice *****************
	if the ip is a local host(e.g. 127.0.0.1) ip instead of a real(external) ip address,
	the program on different machines will not connect successfully since the ip is not real
	In this case, please to change a machine to run our binder and server
	so that to get a real ip of both binder and server.

Executable files:
	After make, you will get librpc.a

Version of makefile:
			GNU Make 3.81

Version of c++ compiler:
			gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5)
Contributor
			Chao Chen (c99chen)
			Honghao Zhang (h344zhan)



